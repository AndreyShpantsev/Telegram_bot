#—Ç–≥-–±–æ—Ç
from pyowm import OWM
from datetime import datetime, date, time
import pyowm
import telebot
import forecast
import timestamps
from pyowm.utils import config
from pyowm.utils import timestamps

owm = OWM('e5f5c146af2a039f2c1a46d2986aa25b')
bot = telebot.TeleBot("1137909786:AAGI3jdc46-AIl1TcKqftksey6znyq8lU-o")

@bot.message_handler(commands = ['start'])
def welcome(message):
	sticker = open('welcome.webp', 'rb')
	bot.send_sticker(message.chat.id, sticker)

	bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã!ü§ì".format(message.from_user, bot.get_me()),
		parse_mode = 'html')
	bot.send_message(message.chat.id, "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞ - –≤–≤–µ–¥–∏—Ç–µ /help –∏ —Å—Ä–∞–∑—É —É–∑–Ω–∞–µ—Ç–µ, –Ω–∞ —á—Ç–æ –æ–Ω —Å–ø–æ—Å–æ–±–µ–Ω!üòâ")

@bot.message_handler(commands = ['help'])
def help(message):
	answer = "–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª: " + "\n"
	answer += "/start - –∫–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º" + "\n"
	answer += "/help - –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏ –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥" + "\n"
	answer += "/current - –∫–æ–º–∞–Ω–¥–∞, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∞—è —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É" + "\n"
	answer += "/forecast - –∫–æ–º–∞–Ω–¥–∞, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∞—è –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã" + "\n"
	answer += "/sun - –∫–æ–º–∞–Ω–¥–∞, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∞—è –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞"

	bot.send_message(message.chat.id, answer)

@bot.message_handler(commands = ['current'])
def current(message):
	cur = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É: ")
	bot.register_next_step_handler(cur, send_weather)

def send_weather(message):
	mgr = owm.weather_manager()
	observation = mgr.weather_at_place(message.text)
	w = observation.weather
	status = w.status
	temp = w.temperature('celsius')["temp"]
	deg = w.wind()["deg"]
	speed = w.wind()["speed"]
	hum = w.humidity
	sunrise_unix = w.sunrise_time(timeformat='date')

	if deg < 45 or deg > 315:
		wind = "—Å–µ–≤–µ—Ä–Ω—ã–π"
	if deg > 45 and deg < 135:
		wind = "–≤–æ—Å—Ç–æ—á–Ω—ã–π"
	if deg > 135 and deg < 225:
		wind = "—é–∂–Ω—ã–π"
	if deg > 225 and deg < 315:
		wind = "–∑–∞–ø–∞–¥–Ω—ã–π"

	if status == "Clouds":
		status = "–û–±–ª–∞—á–Ω–æ"
		sti_clouds = open('clouds.tgs', 'rb')
		bot.send_sticker(message.chat.id, sti_clouds)
	elif status == "Rain":
		status = "–î–æ–∂–¥—å"
		sti_rain = open('rain.tgs', 'rb')
		bot.send_sticker(message.chat.id, sti_rain)
	elif status == "Mist":
		status = "–¢—É–º–∞–Ω"
		sti_mist = open('mist.webp', 'rb')
		bot.send_sticker(message.chat.id, sti_mist)
	elif status == "Fog":
		status = "–¢—É–º–∞–Ω"
		sti_mist = open('mist.webp', 'rb')
		bot.send_sticker(message.chat.id, sti_mist)

	if status == "Clear" and temp > 30:
		status = "–Ø—Å–Ω–æ"
		sti_clear = open('clear.tgs', 'rb')
		bot.send_sticker(message.chat.id, sti_clear)
	elif status == "Clear" and temp < 30:
		status = "–Ø—Å–Ω–æ"
		sti_clear = open('clear_less30.tgs', 'rb')
		bot.send_sticker(message.chat.id, sti_clear)

	answer = "–í –≥–æ—Ä–æ–¥–µ " + message.text  + " —Å–µ–π—á–∞—Å " + str(temp) + " –≥—Ä–∞–¥—É—Å–æ–≤! " + "\n"
	answer += status + "\n"
	answer += "–í–µ—Ç–µ—Ä - " + wind + " —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é " + str(speed) + " –º/—Å!" + "\n"
	answer += "–í–ª–∞–∂–Ω–æ—Å—Ç—å - " + str(hum) + "%" + "\n"
	
	bot.send_message(message.chat.id, answer)

@bot.message_handler(commands = ['forecast'])
def forecast(message):
	forecast = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã: ")
	bot.register_next_step_handler(forecast, send_forecast)

def send_forecast(message):
	mgr = owm.weather_manager()
	forecaster = mgr.forecast_at_place(message.text, '3h')
	start = forecaster.when_starts('date')
	end = forecaster.when_ends('date')
	tomorrow = timestamps.tomorrow()                                   
	rain = forecaster.will_be_rainy_at(tomorrow)   
	snow = forecaster.will_have_snow() 
	fog = forecaster.will_have_fog()
	cold = forecaster.most_cold()
	rainy = forecaster.most_rainy()

	if rain == False:
		rain = "–ù–µ—Ç"
	else: 
		rain = "–î–∞"

	if rainy == None:
		rainy = "–ù–µ –±—É–¥–µ—Ç"
	else:
		rainy = "–ë—É–¥–µ—Ç"

	if snow == False:
		snow = "–ù–µ—Ç"
	else: 
		snow = "–î–∞"

	if fog == False:
		fog = "–ù–µ—Ç"
	else: 
		fog = "–î–∞"

	answer = "–ë—É–¥–µ—Ç –ª–∏ –∑–∞–≤—Ç—Ä–∞ –¥–æ–∂–¥—å?: " + str(rain) + "\n"
	answer += "–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 5 –¥–Ω–µ–π!" + "\n"
	answer += "–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞: " + str(start) + "\n" + "–ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞: " + str(end) + "\n"
	answer += "–î–æ–∂–¥—å: " + str(rainy) + "\n" + "–°–Ω–µ–≥: " + str(snow) + "\n" + "–¢—É–º–∞–Ω: " + str(fog) + "\n"
	
	sti_forecast = open('forecast.webp', 'rb')
	bot.send_sticker(message.chat.id, sti_forecast)
	bot.send_message(message.chat.id, answer)

@bot.message_handler(commands = ['sun'])
def sun_city(message):
	sun = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –≥–¥–µ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞: ")
	bot.register_next_step_handler(sun, send_suntime)

def send_suntime(message):
	mgr = owm.weather_manager()
	suntime = mgr.weather_at_place(message.text)
	w = suntime.weather
	sunrise_date = w.sunrise_time(timeformat ='date')
	sunset_date = w.sunset_time(timeformat ='date')

	answer = "–í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞ –≤ –≥–æ—Ä–æ–¥–µ " + str(message.text) + ":" + "\n" + str(sunrise_date) + "\n"
	answer += "–í—Ä–µ–º—è –∑–∞—Ö–æ–¥–∞ —Å–æ–ª–Ω—Ü–∞ –≤ –≥–æ—Ä–æ–¥–µ " + str(message.text) + ":" + "\n" + str(sunset_date) + "\n"

	sti_sun = open('sun.tgs', 'rb')
	bot.send_sticker(message.chat.id, sti_sun)
	bot.send_message(message.chat.id, answer)

@bot.message_handler(content_types = ['text'])
def wrong_command(message):
	answer = "–ö–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ª–∏–±–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! " + "\n" + "–í–≤–µ–¥–∏—Ç–µ /help –∏ —É–∑–Ω–∞–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞."
	bot.send_message(message.chat.id, answer)

bot.polling( none_stop = True)